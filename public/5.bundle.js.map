{"version":3,"sources":["webpack:///./app/js/algorithm.js","webpack:///./app/js/eye.js","webpack:///./app/js/diagnosis/template.js","webpack:///./app/js/diagnosis/diagnosis.js","webpack:///./app/js/color.js","webpack:///./app/js/geo.js"],"names":["Algorithm","spec","Object","freeze","relative","a","x","b","limit","normalize","min","max","INIT_FIXATION_WINDOW","REPLAY_FPS","GazePoint","y","t","getX","getY","getTimestamp","Fixation","d","getDuration","getFixation","GazeWindow","points","detector","pointsX","map","p","DEVICE_WIDTH","pointsY","DEVICE_HEIGHT","Math","dispersion","reduce","length","toFixed","centroid","fullscreen","document","getElementById","getContext","canvas","webkitRequestFullScreen","Diagnosis","socket","undefined","gazeHistory","dataPoints","calibrationPoints","fixationCount","prevFixation","fixationWindow","detectFixations","algorithm","calibrating","r","interval","ts","tsi","cx","cy","px","py","tPoints","calibration","drawPoint","context","i","setInterval","Rect","width","height","clear","Ease","linear","clearInterval","console","log","setTimeout","slice","push","Circle","render","animatePoint","calibrate","focus","save","timeout","forEach","point","diffX","diffY","calibrationPoint","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","absErrX","abs","absErrY","getCalibration","restore","data","renderTmpl","html","setMode","template","connect","io","on","X","Y","Point","shift","gp","Timestamp","fixation","normalizedDuration","FIXATION_COLOR","Line","x1","y1","x2","y2","SACCADE_COLOR","RAW_DATA_COLOR","Points","gazeXCtx","gazeYCtx","renderTimeline","disconnect","CLEAR_COLOR","DIFFERENT_COLORS","HEATMAP_COLORS","h","v","sqrt","hsl","hue","sat","val","round","Color","heat","rel","window","screen","devicePixelRatio","color","fillStyle","fillRect","axis","dim","getR","arc","PI","fill","GT_BASE","getWidth","getHeight","tiles","tileSize","start","rectangle","containsPoint","w","strokeRect","Heatmap","count","Uint16Array","ArrayBuffer","countClone","getCount","setCount","c","getCountArr","setCountArr","reset","count2","buffer","byteLength","global_max","tile","e"],"mappings":"yFAAO,SAASA,EAAUC,EAAO,IAiB/B,OAAOC,OAAOC,OAAO,CACnBC,SAjBa,SAASC,EAAGC,EAAGC,GAC5B,OAAQD,EAAID,IAAME,EAAIF,IAiBtBG,MAdU,SAASH,EAAGC,EAAGC,GACzB,OAAGD,EAAID,EAAUA,EACdC,EAAIC,EAAUA,EACVD,GAYPG,UATc,SAASH,EAAGI,EAAKC,GAG/B,OAFIL,EAAII,IAAOJ,EAAII,GACfJ,EAAIK,IAAOL,EAAIK,IACXL,EAAII,IAAQC,EAAMD,MAd9B,mC,gCCAA,qLAEO,MAEME,EAAuB,GAEvBC,EAAa,EAEnB,SAASC,EAAUb,EAAO,CAACK,EAAG,EAAGS,EAAG,EAAGC,EAAG,IAC/C,IAAI,EAACV,EAAD,EAAGS,EAAH,EAAKC,GAAKf,EAMd,OAAOC,OAAOC,OAAO,CACnBc,KALS,WAAa,OAAOX,GAM7BY,KALS,WAAa,OAAOH,GAM7BI,aALiB,WAAa,OAAOH,KASlC,SAASI,EAASnB,EAAO,CAACK,EAAG,EAAGS,EAAG,EAAGC,EAAG,EAAGK,EAAG,IACpD,IAAI,EAACf,EAAD,EAAGS,EAAH,EAAKC,EAAL,EAAOK,GAAKpB,EAWhB,OAAOC,OAAOC,OAAO,CACnBc,KAVS,WAAa,OAAOX,GAW7BY,KAVS,WAAa,OAAOH,GAW7BI,aAViB,WAAa,OAAOH,GAWrCM,YAVgB,WAAa,OAAOD,GAWpCE,YATgB,WAChB,MAAO,CAACjB,EAAGA,EAAGS,EAAGA,MAYd,SAASS,EAAWvB,EAAO,CAACwB,OAAQ,KACzC,IAAI,OAACA,GAAUxB,EA4Bf,OAAOC,OAAOC,OAAO,CACnBuB,SARa,WACb,OApBe,WACf,IAAIC,EAAUF,EAAOG,IAAIC,GAAKA,EAAEZ,OAASa,KACrCC,EAAUN,EAAOG,IAAIC,GAAKA,EAAEX,OAASc,KAEzC,OAAQC,KAAKtB,OAAOgB,GAAWM,KAAKvB,OAAOiB,IAAaM,KAAKtB,OAAOoB,GAAWE,KAAKvB,OAAOqB,IAgBvFG,GAhE4B,IAmDnB,WACb,IAAIP,EAAUF,EAAOG,IAAIC,GAAKA,EAAEZ,QAC5Bc,EAAUN,EAAOG,IAAIC,GAAKA,EAAEX,QAEhC,OAAOE,EAAS,CACdd,IAAKqB,EAAQQ,OAAO,CAAC9B,EAAEE,IAAMF,EAAEE,GAAKoB,EAAQS,QAAQC,QAAQ,GAC5DtB,IAAKgB,EAAQI,OAAO,CAAC9B,EAAEE,IAAMF,EAAEE,GAAKwB,EAAQK,QAAQC,QAAQ,GAC5DrB,GAAKS,EAAO,GAAGN,eAAgBkB,QAAQ,GACvChB,IAAKI,EAAOA,EAAOW,OAAO,GAAGjB,eAAiBM,EAAO,GAAGN,gBAAgBkB,QAAQ,KAMzEC,Q,8JCpCb,IAAIC,EAAa,WACCC,SAASC,eAAe,KAAKC,WAAW,MAChDC,OAAOC,2B,+MCrBV,SAASC,EAAU5C,GACxB,IAAI6C,OAASC,EAETC,EAAc,GACdC,EAAa,GACbC,EAAoB,GACpBC,EAAgB,EAChBC,OAAeL,EACfM,EAAiBzC,IACjB0C,GAAkB,EAClBC,EAAYvD,YAAU,IACtBwD,GAAc,EAMdC,EAAI,GACJC,OAAWX,EACX/B,EAAI,EACJ2C,EAAK,EACLC,EAAM,EACNvC,EAAI,IAGJwC,EAAK,EACLC,EAAK,EAELC,EAAK,EACLC,EAAK,EAELC,EAAU,CAAC,CAAC,GAAI,IAAM,CAAC,GAAI,IAAM,CAAC,GAAI,IAAM,CAAC,GAAI,IAAM,CAAC,GAAI,KAC5DC,EAAc,GAqDdC,EAAY,SAASC,EAAS9D,EAAGS,EAAGsD,GACtCN,EAAKF,EACLG,EAAKF,EACL9C,EAAI,EAEJ0C,EAAWY,aAAY,WACrBC,YAAK,CAACjE,EAAG,EAAGS,EAAG,EAAGyD,MAAOJ,EAAQzB,OAAO6B,MAAOC,OAAQL,EAAQzB,OAAO8B,SAASC,MAAMN,EAAS,QAjC/E,SAASA,EAAS9D,EAAGS,EAAGsD,GACrCZ,EAAI,KACNA,EAAIkB,YAAK,IAAIC,OAAOhB,EAAK,EAAG,GApCtB,YAsCJA,IACFC,EAAKc,YAAK,IAAIC,OAAO5D,EAAG+C,EAAIzD,EAAGe,GAC/ByC,EAAKa,YAAK,IAAIC,OAAO5D,EAAGgD,EAAIjD,EAAGM,GAC3BL,IAAMK,IACRoC,EAAIkB,YAAK,IAAIC,OAAOjB,EAAI,GAAI,EA3CzB,WA4CCA,IACFkB,cAAcnB,GACdC,EAAK,EACLC,EAAM,EACNkB,QAAQC,IAAI,kBAAmB7B,GAC/B8B,YAAW,WACT9B,EAAoBF,EAAYiC,MAAM,GAAGjC,EAAYZ,QACrD8B,EAAYgB,KAAKhC,GACjBA,EAAoB,KACnB,QAKTiC,YAAO,CAAC7E,EAAIuD,EAAI9C,EAAG+C,EAAIL,EAAGA,IAAI2B,OAAOhB,OAASrB,EAAW,WACzDoC,YAAO,CAAC7E,EAAIuD,EAAI9C,EAAG+C,EAAIL,EAAG,IAAI2B,OAAOhB,OAASrB,EAAW,QAUvDsC,CAAajB,EAAS9D,EAAGS,GApEnB,MAqEF6C,EACI5C,IAAMK,EAAKsC,GAAM,GACd3C,GAAK,GACP4C,GAAO,KACf,KAGD0B,EAAY,WACdF,EAAOnF,GACP,IAAImE,EAAU5B,SAASC,eAAe,KAAKC,WAAW,MACtDc,GAAc,EACdY,EAAQzB,OAAO4C,QACfnB,EAAQzB,OAAOC,0BACfwB,EAAQoB,OACRjB,YAAK,CAACjE,EAAG,EAAGS,EAAG,EAAGyD,MAAOJ,EAAQzB,OAAO6B,MAAOC,OAAQL,EAAQzB,OAAO8B,SAASC,MAAMN,EAAS,QAE9F,IAAIqB,EAAU,EACdxB,EAAQyB,SAAQ,SAASC,EAAOtB,GAC9BW,YAAW,WAAcb,EAAUC,EAAQuB,EAAM,GAAGA,EAAM,MAAUF,GAClEA,GAAW,OAGfT,YAAW,YAjFQ,SAASZ,GAC5B,IAAIwB,EAAQ,GACRC,EAAQ,GACZtB,YAAK,CAACjE,EAAG,EAAGS,EAAG,EAAGyD,MAAOJ,EAAQzB,OAAO6B,MAAOC,OAAQL,EAAQzB,OAAO8B,SAASC,MAAMN,EAAS,QAC9FF,EAAYwB,SAAQ,SAASI,EAAkBzB,GAC7CD,EAAQ2B,UAAY,KAAM3B,EAAQzB,OAAO8B,OACzCU,YAAO,CAAC7E,EAAI2D,EAAQI,GAAG,GAAItD,EAAGkD,EAAQI,GAAG,GAAIZ,EAAG,KAAK2B,OAAOhB,EAAS,oBACrE0B,EAAiBJ,SAAQ,SAASC,GAChCvB,EAAQ2B,UAAY,KAAM3B,EAAQzB,OAAO8B,OAEzCL,EAAQ4B,YAAc,UACtB5B,EAAQ6B,YACR7B,EAAQ8B,OAAOjC,EAAQI,GAAG,GAAGD,EAAQzB,OAAO6B,MAAOP,EAAQI,GAAG,GAAGD,EAAQzB,OAAO8B,QAChFL,EAAQ+B,OAAOR,EAAM1E,OAAOmD,EAAQzB,OAAO6B,MAAOmB,EAAMzE,OAAOkD,EAAQzB,OAAO8B,QAC9EmB,EAAMV,KAAKjB,EAAQI,GAAG,GAAKsB,EAAM1E,QACjC4E,EAAMX,KAAKjB,EAAQI,GAAG,GAAKsB,EAAMzE,QACjCkD,EAAQgC,eAGZ,IAAIC,EAAUpE,KAAKqE,IAAIV,EAAMzD,QAAO,SAAS9B,EAAEE,GAAK,OAAOF,EAAIE,KAAOqF,EAAMxD,QACxEmE,EAAUtE,KAAKqE,IAAIT,EAAM1D,QAAO,SAAS9B,EAAEE,GAAK,OAAOF,EAAIE,KAAOsF,EAAMzD,QAC5E0C,QAAQC,IAAI,QAAkC,KAAzB,GAAKsB,EAAUE,KA6DlCC,CAAepC,KACd,IAAKH,EAAQ7B,QAEhBgC,EAAQqC,WAGNrB,EAASsB,IACXC,YDrIqBD,IAASE,GAAK;;;;0BAIbrE;;;;;;;+BAOKmE,EAAKG;;;;;;;;;0BASVH,EAAKpB;;;;;;;ECiHhBwB,CAASJ,GAAOlE,SAASC,eAAe,UAInD,EAAcxC,EAAM,CAClB4G,QAnHU,WACZvD,GAAmBA,GAmHjBgC,cAEFF,EAAOnF,GAiET,OAAOC,OAAOC,OAAO,CACnB4G,QA7DY,SAAS3C,GACrBtB,EAASkE,IAAGD,QAAQ,oBACpBjE,EAAOmE,GAAG,QAAQ,SAAUP,GAC1BA,EAAKQ,EAAIR,EAAKQ,EAAIpF,IAClB4E,EAAKS,EAAIT,EAAKS,EAAInF,IAElB,IAAIH,EAAIuF,YAAM,CAAC9G,EAAGoG,EAAKQ,EAAGnG,EAAG2F,EAAKS,IAIlC,GAH2B,KAAvBnE,EAAYZ,QAAiBY,EAAYqE,QAC7CrE,EAAYkC,KAAKrD,IAEZ2B,EAAa,CAChB,GAAIF,EAAiB,CACnB,IAAIgE,EAAKxG,YAAU,CAACR,EAAGoG,EAAKQ,EAAGnG,EAAG2F,EAAKS,EAAGnG,EAAG0F,EAAKa,YAElD,GADAtE,EAAWiC,KAAKoC,GACZrE,EAAWb,SAAWiB,EAAgB,CACxC,IAAImE,EAAWhG,YAAW,CAACC,OAAQwB,IAAavB,WAChD,GAAI8F,EAAU,CACZrE,GAAiB,EACK,KAAlBA,IACFoB,YAAK,CAACjE,EAAG,EAAGS,EAAG,EAAGyD,MAAOJ,EAAQzB,OAAO6B,MAAOC,OAAQL,EAAQzB,OAAO8B,SAASC,MAAMN,GACrFjB,EAAgB,GAGlB,IAAIsE,EAA6E,GAAxDlE,EAAU9C,UAAU+G,EAASlG,cAAe,IAAK,KAC1E6D,YAAO,CAAC7E,EAAGkH,EAASvG,OAAQF,EAAGyG,EAAStG,OAAQuC,EAAGgE,IAAqBrC,OAAOhB,EAASsD,KAEpFtE,GACFuE,YAAK,CAACC,GAAIxE,EAAanC,OAAQ4G,GAAIzE,EAAalC,OAAQ4G,GAAIN,EAASvG,OAAQ8G,GAAIP,EAAStG,SAASkE,OAAOhB,EAAS4D,KAErH5E,EAAeoE,EAEfvE,EAAa,GACbI,EAAiBzC,SAEjByC,UAIJkB,YAAK,CAACjE,EAAG,EAAGS,EAAG,EAAGyD,MAAOJ,EAAQzB,OAAO6B,MAAOC,OAAQL,EAAQzB,OAAO8B,SAASC,MAAMN,GACrFvC,EAAEuD,OAAOhB,EAAS6D,KAClBC,YAAO,CAACzG,OAAQuB,IAAcoC,OAAOhB,EAAS6D,KAGhD,IAAIE,EAAW3F,SAASC,eAAe,UAAUC,WAAW,MACxD0F,EAAW5F,SAASC,eAAe,UAAUC,WAAW,MAE5D6B,YAAK,CAACjE,EAAG,EAAGS,EAAG,EAAGyD,MAAO2D,EAASxF,OAAO6B,MAAOC,OAAQ0D,EAASxF,OAAO8B,SAASC,MAAMyD,GACvF5D,YAAK,CAACjE,EAAG,EAAGS,EAAG,EAAGyD,MAAO4D,EAASzF,OAAO6B,MAAOC,OAAQ2D,EAASzF,OAAO8B,SAASC,MAAM0D,GAEvFF,YAAO,CAACzG,OAAQuB,IAAcqF,eAAeF,EAAU,EAAGF,KAC1DC,YAAO,CAACzG,OAAQuB,IAAcqF,eAAeD,EAAU,EAAGH,UAY9DK,WAPe,WACfxF,EAAOwF,aACPxD,QAAQC,IAAI,kC,+BC7MhB,sLAEO,MAAMkD,EAAiB,qBACjBP,EAAiB,yBACjBM,EAAgB,yBAChBO,EAAc,aAEdC,EAAmB,GACnBC,EAAiB,GAU9B,IAAK,IAAIpE,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIqE,EAAS,iBAAJrE,EAAyB,EAE9BsE,EAAI1G,KAAK2G,KAAK,EAAY,iBAAJvE,EAAyB,IAG/CwE,EAbG,CADQC,EAcGJ,GAdCK,EAUX,KAVeC,EAcDL,KAXVG,GAAK,EAAEC,GAAKC,GAAK,EAAEF,EAAI,EAAEA,GACnCA,EAAI,GAYNN,EAAiBtD,KAAK,QAAUjD,KAAKgH,MAAa,IAAPJ,EAAI,IAAU,IAAM5G,KAAKgH,MAAa,IAAPJ,EAAI,IAAU,KAAO5G,KAAKgH,MAAa,IAAPJ,EAAI,IAAxF,UAhBxB,IAAiBC,EAAIC,EAAIC,EAmBzB,IAAK,IAAIN,EAAI,EAAGA,EAAI,IAAKA,IACvBD,EAAevD,KAAK,SAAW,IAAMwD,GAAjB,mBAGf,SAASQ,EAAMjJ,EAAO,IAC3B,IAAIsD,EAAYvD,YAAU,IAQ1B,OAAOE,OAAOC,OAAO,CACnBgJ,KAPS,SAASC,GAClB,IAAI/H,EAAIkC,EAAU/C,MAAM,EAAG4I,EAAK,GAChC,OAAY,IAARA,EAAkB,gBACfX,EAAexG,KAAKgH,MAAO5H,GAAKoH,EAAerG,OAAS,U,+BCvCnE,qUAIO,MAAMN,EAAeuH,OAAOC,OAAO9E,MAAQ6E,OAAOE,iBAC5CvH,EAAgBqH,OAAOC,OAAO7E,OAAS4E,OAAOE,iBAE3D,IAAIC,EAAQN,YAAM,IACd3F,EAAYvD,YAAU,IAEnB,SAASoH,EAAMnH,EAAO,CAACK,EAAG,EAAGS,EAAG,IACrC,IAAI,EAACT,EAAD,EAAIS,GAAKd,EAUb,OAAOC,OAAOC,OAAO,CACnBc,KATS,WAAa,OAAOX,GAU7BY,KATS,WAAa,OAAOH,GAU7BqE,OARW,SAAShB,EAASqF,GAC7BrF,EAAQqF,UAAYA,EACpBrF,EAAQsF,SAASpJ,EAAE8D,EAAQzB,OAAO6B,MAAOzD,EAAEqD,EAAQzB,OAAO8B,OAAQ,KAAML,EAAQzB,OAAO6B,MAAO,KAAMJ,EAAQzB,OAAO6B,UAUhH,SAAS0D,EAAOjI,EAAO,CAACwB,OAAQ,KACrC,IAAI,OAACA,GAAUxB,EAiBf,OAAOC,OAAOC,OAAO,CACnBiF,OAhBW,SAAShB,EAASqF,GAC7BrF,EAAQqF,UAAYA,EACpBhI,EAAOiE,SAAQ,SAAS7D,GACtBA,EAAEuD,OAAOhB,EAASqF,OAcpBpB,eAVmB,SAASjE,EAASuF,EAAMF,GAC3CrF,EAAQqF,UAAYA,EACpBhI,EAAOiE,SAAQ,SAAS7D,EAAGwC,GACzB,IAAIuF,EAAe,IAATD,EAAY9H,EAAEZ,OAASY,EAAEX,OACnCkD,EAAQsF,SAAUrF,EAAE,GAAID,EAAQzB,OAAO6B,OAAQ,EAAEoF,GAAKxF,EAAQzB,OAAO8B,OAAQL,EAAQzB,OAAO6B,MAAM,GAAI,SAUrG,SAASmD,EAAK1H,EAAO,CAAC2H,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACpD,IAAI,GAACH,EAAD,GAAKC,EAAL,GAASC,EAAT,GAAaC,GAAM9H,EAUvB,OAAOC,OAAOC,OAAO,CACnBiF,OATW,SAAShB,EAAS4B,GAC7B5B,EAAQ4B,YAAcA,EACtB5B,EAAQ6B,YACR7B,EAAQ8B,OAAO0B,EAAGxD,EAAQzB,OAAO6B,MAAOqD,EAAGzD,EAAQzB,OAAO8B,QAC1DL,EAAQ+B,OAAO2B,EAAG1D,EAAQzB,OAAO6B,MAAOuD,EAAG3D,EAAQzB,OAAO8B,QAC1DL,EAAQgC,YAQL,SAASjB,EAAOlF,EAAO,CAACK,EAAG,EAAGS,EAAG,EAAG0C,EAAG,IAC5C,IAAI,EAACnD,EAAD,EAAIS,EAAJ,EAAO0C,GAAKxD,EAmBhB,OAAOC,OAAOC,OAAO,CACnBc,KAlBS,WAAa,OAAOX,GAmB7BY,KAlBS,WAAa,OAAOH,GAmB7B8I,KAlBS,WAAa,OAAOpG,GAmB7B2B,OAjBW,SAAShB,EAAS4B,EAAayD,GAC1CrF,EAAQ6B,YACR7B,EAAQ0F,IAAIxJ,EAAE8D,EAAQzB,OAAO6B,MAAOzD,EAAEqD,EAAQzB,OAAO8B,OAAQhB,EAAG,EAAG,EAAIxB,KAAK8H,IACxEN,IACFrF,EAAQqF,UAAYA,EACpBrF,EAAQ4F,QAENhE,IACF5B,EAAQ4B,YAAcA,EACtB5B,EAAQgC,aAYd,MAAM6D,EAAU,CAAC,GAAI,IAGd,SAAS1F,EAAKtE,EAAO,CAACK,EAAG,EAAGS,EAAG,EAAGyD,MAAO,EAAGC,OAAQ,IACzD,IAAI,EAACnE,EAAD,EAAIS,EAAJ,MAAOyD,EAAP,OAAcC,GAAUxE,EA4D5B,OAAOC,OAAOC,OAAO,CACnBc,KA3DS,WAAa,OAAOX,GA4D7BY,KA3DS,WAAa,OAAOH,GA4D7BmJ,SA3Da,WAAa,OAAO1F,GA4DjC2F,UA3Dc,WAAa,OAAO1F,GA4DlCC,MA1DU,SAASN,EAASqF,GACbrF,EAAQqF,UAAnBA,GACqBlB,IACzBnE,EAAQsF,SAAS,EAAG,EAAGlF,EAAOC,IAwD9B2F,MAtCU,SAASC,EAAWJ,GAC9B,IAAIG,EAAQ,GACRE,EAAQ,CAAChK,EAAGA,EAAGS,EAAGA,GAClBsG,GAAQ,EAEZ,KAAOiD,EAAMvJ,EAAIA,EAAI0D,GAAQ,CAC3B,IAAI8F,EAAY,CAACjK,EAAGgK,EAAMhK,EAAGS,EAAGuJ,EAAMvJ,EAAGyD,MAAO6F,EAAS,GAAI5F,OAAQ4F,EAAS,IAC9ED,EAAMlF,KAAKqF,GAEXD,EAAMhK,EAAIiK,EAAUjK,EAAIiK,EAAU/F,MAE/B8F,EAAMhK,GAAKA,EAAIkE,IAChB6C,GAASA,EACTiD,EAAMvJ,GAAKsJ,EAAS,GACpBC,EAAMhK,EAAI+G,EAAQ/G,EAAK+J,EAAS,GAAK,EAAK,GAI9C,OAAOD,GAqBPI,cAtDkB,SAASzG,EAAIC,GAC/B,IAAIyG,EAAIjG,EACJkE,EAAIjE,EAGR,SAAKgG,EAAI/B,GAAK,OAGV3E,EAAKzD,GAAK0D,EAAKjD,KACnB0J,GAAKnK,EACLoI,GAAK3H,GAEI0J,EAAInK,GAAKmK,EAAI1G,KAAQ2E,EAAI3H,GAAK2H,EAAI1E,MA2C3CoB,OAnBW,SAAShB,EAAS4B,EAAayD,GACtCzD,IACF5B,EAAQ4B,YAAcA,EACtB5B,EAAQsG,WAAWpK,EAAGS,EAAGyD,EAAOC,IAE9BgF,IACFrF,EAAQqF,UAAYA,EACpBrF,EAAQsF,SAASpJ,EAAGS,EAAGyD,EAAOC,OAgB7B,SAASkG,EAAQ1K,EAAO,CAACmK,MAAO,KACrC,IAAI,MAACA,GAASnK,EACV2K,EAAQ,IAAIC,YAAY,IAAIC,YAAyB,EAAbV,EAAMhI,SAC9C2I,EAAa,IAAIF,YAAY,IAAIC,YAAyB,EAAbV,EAAMhI,SA8BvD,OAAOlC,OAAOC,OAAO,CACnB6K,SA7Ba,SAAS3G,GAAK,OAAOuG,EAAMvG,IA8BxC4G,SA7Ba,SAAS5G,EAAG6G,GAAKN,EAAMvG,GAAK6G,GA8BzCC,YA7BgB,WAAa,OAAOP,GA8BpCQ,YA7BgB,SAASF,GAAKN,EAAQM,GA8BtCG,MA5BU,WACVT,EAAQ,IAAIC,YAAY,IAAIC,YAAyB,EAAbV,EAAMhI,SAC9C2I,EAAa,IAAIF,YAAY,IAAIC,YAAyB,EAAbV,EAAMhI,UA2BnDgD,OAxBW,SAAShB,GACpB,IAAIkH,EAAqC,IAA5BV,EAAMW,OAAOC,WAAkBZ,EAAQG,EAChDU,EAAaxJ,KAAKtB,OAAO2K,GAEV,IAAfG,GACFrB,EAAM1E,SAAQ,SAASgG,EAAMrH,GAC3B,GAAIiH,EAAOjH,GAAI,CACb,IAAIqE,EAAIc,EAAML,KAAK5F,EAAUnD,SAAS,EAAEkL,EAAOjH,GAAGoH,IAClDC,EAAKtG,OAAOhB,OAASrB,EAAW2F,OAKN,IAA5BkC,EAAMW,OAAOC,aACfT,EAAaH,EAAM3F,MAAM,OAexB,SAASN,EAAK1E,EAAO,IAK1B,OAAOC,OAAOC,OAAO,CACnByE,OALW,SAAS5D,EAAET,EAAEoL,EAAEtK,GAC1B,OAAQsK,EAAEpL,GAAGS,EAAEK,EAAId","file":"5.bundle.js","sourcesContent":["export function Algorithm(spec = {}) {\r\n  let relative = function(a, x, b) {\r\n    return (x - a) / (b - a);\r\n  }\r\n\r\n  let limit = function(a, x, b) {\r\n    if(x < a) return a;\r\n    if(x > b) return b;\r\n    return x;\r\n  }\r\n\r\n  let normalize = function(x, min, max) {\r\n    if (x < min) { x = min; }\r\n    if (x > max) { x = max; }\r\n    return (x - min) / (max - min);\r\n  }\r\n\r\n  return Object.freeze({\r\n    relative,\r\n    limit,\r\n    normalize\r\n  });\r\n}\r\n","import {DEVICE_WIDTH, DEVICE_HEIGHT} from './geo.js';\r\n\r\nexport const DISPERSION_THRESHOLD = 50; // pixels\r\nexport const DURATION_THRESHOLD = 150; // ms\r\nexport const INIT_FIXATION_WINDOW = 10; // ~0.15 * 70Hz\r\n\r\nexport const REPLAY_FPS = 5;\r\n\r\nexport function GazePoint(spec = {x: 0, y: 0, t: 0}) {\r\n  let {x,y,t} = spec\r\n\r\n  let getX = function() { return x; }\r\n  let getY = function() { return y; }\r\n  let getTimestamp = function() { return t; }\r\n\r\n  return Object.freeze({\r\n    getX,\r\n    getY,\r\n    getTimestamp\r\n  })\r\n}\r\n\r\nexport function Fixation(spec = {x: 0, y: 0, t: 0, d: 0}) {\r\n  let {x,y,t,d} = spec;\r\n\r\n  let getX = function() { return x; }\r\n  let getY = function() { return y; }\r\n  let getTimestamp = function() { return t; }\r\n  let getDuration = function() { return d; }\r\n\r\n  let getFixation = function() {\r\n    return {x: x, y: y};\r\n  }\r\n\r\n  return Object.freeze({\r\n    getX,\r\n    getY,\r\n    getTimestamp,\r\n    getDuration,\r\n    getFixation\r\n  })\r\n}\r\n\r\nexport function GazeWindow(spec = {points: []}) {\r\n  let {points} = spec;\r\n\r\n  let dispersion = function() {\r\n    let pointsX = points.map(p => p.getX() * DEVICE_WIDTH);\r\n    let pointsY = points.map(p => p.getY() * DEVICE_HEIGHT);\r\n\r\n    return (Math.max(...pointsX) - Math.min(...pointsX)) + (Math.max(...pointsY) - Math.min(...pointsY));\r\n  }\r\n\r\n  let centroid = function() {\r\n    let pointsX = points.map(p => p.getX());\r\n    let pointsY = points.map(p => p.getY());\r\n\r\n    return Fixation({\r\n      x: +(pointsX.reduce((a,b) => a+b) / pointsX.length).toFixed(6),\r\n      y: +(pointsY.reduce((a,b) => a+b) / pointsY.length).toFixed(6),\r\n      t: +(points[0].getTimestamp()).toFixed(6),\r\n      d: +(points[points.length-1].getTimestamp() - points[0].getTimestamp()).toFixed(6)\r\n    })\r\n  }\r\n\r\n  let detector = function() {\r\n    if (dispersion() > DISPERSION_THRESHOLD) {\r\n      return centroid();\r\n    }\r\n    return false;\r\n  }\r\n\r\n  return Object.freeze({\r\n    detector\r\n  })\r\n}\r\n","import {html} from 'lit-html';\r\n\r\nexport const template = (data) => html`\r\n  <div class=\"mdc-layout-grid\">\r\n    <div class=\"mdc-layout-grid__inner\">\r\n      <div class=\"mdc-layout-grid__cell--span-8\">\r\n        <canvas @click=\"${fullscreen}\" id=\"a\" width=\"1280\" height=\"720\"></canvas>\r\n      </div>\r\n      <div class=\"mdc-layout-grid__cell--span-4\">\r\n        <div class=\"mdc-switch\">\r\n          <div class=\"mdc-switch__track\"></div>\r\n          <div class=\"mdc-switch__thumb-underlay\">\r\n            <div class=\"mdc-switch__thumb\">\r\n              <input @click=\"${data.setMode}\" type=\"checkbox\" id=\"basic-switch\" class=\"mdc-switch__native-control\" role=\"switch\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <label for=\"basic-switch\">Detect fixations</label>\r\n        <h5>Timeline</h5>\r\n        <canvas id=\"gaze-x\" width=\"100\" height=\"30\"></canvas>\r\n        <canvas id=\"gaze-y\" width=\"100\" height=\"30\"></canvas>\r\n        <h5>Calibration</h5>\r\n        <button @click=\"${data.calibrate}\" class=\"mdc-button mdc-button--unelevated\">\r\n          <i class=\"material-icons mdc-button__icon\" aria-hidden=\"true\">adjust</i>\r\n          <span class=\"mdc-button__label\">Inspect calibration</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n`;\r\n\r\nlet fullscreen = function() {\r\n  const context = document.getElementById('a').getContext('2d');\r\n  context.canvas.webkitRequestFullScreen()\r\n}\r\n","import {DEVICE_WIDTH, DEVICE_HEIGHT} from '../geo.js';\r\nimport {Point, Points, Line, Circle, Rect, Ease} from '../geo.js';\r\nimport {INIT_FIXATION_WINDOW} from '../eye.js';\r\nimport {Fixation, GazePoint, GazeWindow} from '../eye.js';\r\nimport {RAW_DATA_COLOR, FIXATION_COLOR, SACCADE_COLOR} from '../color.js';\r\nimport {Algorithm} from '../algorithm.js';\r\n\r\nimport io from 'socket.io-client';\r\nimport {render as renderTmpl} from 'lit-html';\r\n\r\nimport {template} from './template.js'\r\n\r\nexport function Diagnosis(spec) {\r\n  let socket = undefined;\r\n\r\n  let gazeHistory = [];\r\n  let dataPoints = [];\r\n  let calibrationPoints = [];\r\n  let fixationCount = 0;\r\n  let prevFixation = undefined;\r\n  let fixationWindow = INIT_FIXATION_WINDOW;\r\n  let detectFixations = false;\r\n  let algorithm = Algorithm({});\r\n  let calibrating = false;\r\n\r\n  let setMode = function() {\r\n    detectFixations = !detectFixations;\r\n  }\r\n\r\n  let r = 24;\r\n  let interval = undefined;\r\n  let t = 0;\r\n  let ts = 0;\r\n  let tsi = 0;\r\n  let d = 600;\r\n  let ds = 200;\r\n  let dsi = 100;\r\n  let cx = 0;\r\n  let cy = 0;\r\n\r\n  let px = 0;\r\n  let py = 0;\r\n\r\n  let tPoints = [[0.1,0.1], [0.9,0.1], [0.5,0.5], [0.1,0.9], [0.9,0.9]];\r\n  let calibration = [];\r\n\r\n  let getCalibration = function(context) {\r\n    let diffX = [];\r\n    let diffY = [];\r\n    Rect({x: 0, y: 0, width: context.canvas.width, height: context.canvas.height}).clear(context, \"#ccc\");\r\n    calibration.forEach(function(calibrationPoint, i) {\r\n      context.lineWidth = 0.005*context.canvas.height;\r\n      Circle({x:  tPoints[i][0], y: tPoints[i][1], r: 10}).render(context, 'rgba(0,0,0,0.25)');\r\n      calibrationPoint.forEach(function(point) {\r\n        context.lineWidth = 0.001*context.canvas.height;\r\n\r\n        context.strokeStyle = '#95c45d';\r\n        context.beginPath();\r\n        context.moveTo(tPoints[i][0]*context.canvas.width, tPoints[i][1]*context.canvas.height);\r\n        context.lineTo(point.getX()*context.canvas.width, point.getY()*context.canvas.height);\r\n        diffX.push(tPoints[i][0] - point.getX());\r\n        diffY.push(tPoints[i][1] - point.getY());\r\n        context.stroke();\r\n      })\r\n    })\r\n    let absErrX = Math.abs(diffX.reduce(function(a,b) { return a + b;}) / diffX.length);\r\n    let absErrY = Math.abs(diffY.reduce(function(a,b) { return a + b;}) / diffY.length);\r\n    console.log(\"erorr\",(1 - (absErrX + absErrY))*100);\r\n  }\r\n\r\n  let animatePoint = function(context, x, y, i) {\r\n    if (r < 24) {\r\n      r = Ease({}).linear(tsi, 5, 24, dsi);\r\n    }\r\n    if (tsi === dsi) {\r\n      cx = Ease({}).linear(t, px, x, d);\r\n      cy = Ease({}).linear(t, py, y, d);\r\n      if (t === d) {\r\n        r = Ease({}).linear(ts, 24, 6, ds);\r\n        if (ts === ds) {\r\n          clearInterval(interval);\r\n          ts = 0;\r\n          tsi = 0;\r\n          console.log(\"calibration end\", calibrationPoints);\r\n          setTimeout(function() {\r\n            calibrationPoints = gazeHistory.slice(20,gazeHistory.length);\r\n            calibration.push(calibrationPoints);\r\n            calibrationPoints = [];\r\n          }, 1000);\r\n        }\r\n      }\r\n    }\r\n\r\n    Circle({x:  cx, y: cy, r: r}).render(context, undefined, '#e36056');\r\n    Circle({x:  cx, y: cy, r: 5}).render(context, undefined, '#000');\r\n  }\r\n\r\n  let drawPoint = function(context, x, y, i) {\r\n    px = cx;\r\n    py = cy;\r\n    t = 0;\r\n\r\n    interval = setInterval(function() {\r\n      Rect({x: 0, y: 0, width: context.canvas.width, height: context.canvas.height}).clear(context, \"#ccc\");\r\n      animatePoint(context, x, y, i);\r\n      if (tsi === dsi) {\r\n          if (t === d) { ts += 10; }\r\n          else { t += 10; }\r\n      } else { tsi += 10; }\r\n    }, 10)\r\n  }\r\n\r\n  let calibrate = function() {\r\n    render(spec);\r\n    let context = document.getElementById('a').getContext('2d');\r\n    calibrating = true;\r\n    context.canvas.focus();\r\n    context.canvas.webkitRequestFullScreen();\r\n    context.save()\r\n    Rect({x: 0, y: 0, width: context.canvas.width, height: context.canvas.height}).clear(context, \"#ccc\");\r\n\r\n    let timeout = 0;\r\n    tPoints.forEach(function(point, i) {\r\n      setTimeout(function () { drawPoint(context,point[0],point[1], i) }, timeout)\r\n        timeout += 2000\r\n    });\r\n\r\n    setTimeout(function() {\r\n      getCalibration(context);\r\n    }, 2000*tPoints.length)\r\n\r\n    context.restore()\r\n  }\r\n\r\n  let render = data => {\r\n    renderTmpl(template(data), document.getElementById('view'));\r\n  }\r\n\r\n  let init = () => {\r\n    Object.assign(spec, {\r\n      setMode,\r\n      calibrate\r\n    });\r\n    render(spec);\r\n  }\r\n\r\n  init();\r\n\r\n  let connect = function(context) {\r\n    socket = io.connect('http://localhost');\r\n    socket.on('news', function (data) {\r\n      data.X = data.X / DEVICE_WIDTH;\r\n      data.Y = data.Y / DEVICE_HEIGHT;\r\n\r\n      let p = Point({x: data.X, y: data.Y});\r\n      if (gazeHistory.length === 30) { gazeHistory.shift(); }\r\n      gazeHistory.push(p);\r\n\r\n      if (!calibrating) {\r\n        if (detectFixations) {\r\n          let gp = GazePoint({x: data.X, y: data.Y, t: data.Timestamp});\r\n          dataPoints.push(gp);\r\n          if (dataPoints.length === fixationWindow) {\r\n            let fixation = GazeWindow({points: dataPoints}).detector();\r\n            if (fixation) {\r\n              fixationCount += 1;\r\n              if (fixationCount === 20) {\r\n                Rect({x: 0, y: 0, width: context.canvas.width, height: context.canvas.height}).clear(context);\r\n                fixationCount = 0;\r\n              }\r\n\r\n              let normalizedDuration = algorithm.normalize(fixation.getDuration(), 100, 400) * 50;\r\n              Circle({x: fixation.getX(), y: fixation.getY(), r: normalizedDuration}).render(context, FIXATION_COLOR);\r\n\r\n              if (prevFixation) {\r\n                Line({x1: prevFixation.getX(), y1: prevFixation.getY(), x2: fixation.getX(), y2: fixation.getY()}).render(context, SACCADE_COLOR);\r\n              }\r\n              prevFixation = fixation;\r\n\r\n              dataPoints = [];\r\n              fixationWindow = INIT_FIXATION_WINDOW;\r\n            } else {\r\n              fixationWindow++;\r\n            }\r\n          }\r\n        } else {\r\n          Rect({x: 0, y: 0, width: context.canvas.width, height: context.canvas.height}).clear(context);\r\n          p.render(context, RAW_DATA_COLOR);\r\n          Points({points: gazeHistory}).render(context, RAW_DATA_COLOR);\r\n        }\r\n\r\n        let gazeXCtx = document.getElementById(\"gaze-x\").getContext('2d');\r\n        let gazeYCtx = document.getElementById(\"gaze-y\").getContext('2d');\r\n\r\n        Rect({x: 0, y: 0, width: gazeXCtx.canvas.width, height: gazeXCtx.canvas.height}).clear(gazeXCtx);\r\n        Rect({x: 0, y: 0, width: gazeYCtx.canvas.width, height: gazeYCtx.canvas.height}).clear(gazeYCtx);\r\n\r\n        Points({points: gazeHistory}).renderTimeline(gazeXCtx, 0, RAW_DATA_COLOR);\r\n        Points({points: gazeHistory}).renderTimeline(gazeYCtx, 1, RAW_DATA_COLOR);\r\n      }\r\n    });\r\n  }\r\n\r\n  let disconnect = function() {\r\n    socket.disconnect();\r\n    console.log(\"disconnect from diagnosis\");\r\n  }\r\n\r\n  return Object.freeze({\r\n    connect,\r\n    disconnect\r\n  });\r\n}\r\n","import {Algorithm} from './algorithm.js'\r\n\r\nexport const RAW_DATA_COLOR = 'rgba(200,0,0,0.85)';\r\nexport const FIXATION_COLOR = 'rgba(255,255,255,0.85)';\r\nexport const SACCADE_COLOR = 'rgba(255,255,255,0.85)';\r\nexport const CLEAR_COLOR = 'rgb(0,0,0)';\r\n\r\nexport const DIFFERENT_COLORS = [];\r\nexport const HEATMAP_COLORS = [];\r\n\r\nfunction hsv2hsl(hue,sat,val) {\r\n  return [\r\n    hue,\r\n    sat*val/((hue=(2-sat)*val)<1?hue:2-hue),\r\n    hue/2\r\n  ]\r\n}\r\n\r\nfor (var i = 0; i < 10; i++) {\r\n  var h = (i * 0.618033988749895) % 1.0;\r\n  var s = 0.5;\r\n  var v = Math.sqrt(1.0 - ((i * 0.618033988749895) % 0.5));\r\n  var a = 0.5;\r\n\r\n  var hsl = hsv2hsl(h,s,v);\r\n\r\n  DIFFERENT_COLORS.push('hsla(' + Math.round(hsl[0]*255) + ',' + Math.round(hsl[1]*100) + '%,' + Math.round(hsl[2]*100) + '%,' + a + ')');\r\n}\r\n\r\nfor (let h = 0; h < 210; h++) {\r\n  HEATMAP_COLORS.push('hsla(' + (209 - h) + ', 50%, 50%,'+ 0.5 +')');\r\n}\r\n\r\nexport function Color(spec = {}) {\r\n  let algorithm = Algorithm({});\r\n\r\n  let heat = function(rel) {\r\n    let d = algorithm.limit(0, rel, 1)\r\n    if (rel === 0) return 'rgba(0,0,0,0)';\r\n    return HEATMAP_COLORS[Math.round((d * (HEATMAP_COLORS.length - 1)))];\r\n  }\r\n\r\n  return Object.freeze({\r\n    heat\r\n  });\r\n}\r\n","import {CLEAR_COLOR} from './color.js';\r\nimport {Color} from './color.js';\r\nimport {Algorithm} from './algorithm.js';\r\n\r\nexport const DEVICE_WIDTH = window.screen.width * window.devicePixelRatio;\r\nexport const DEVICE_HEIGHT = window.screen.height * window.devicePixelRatio;\r\n\r\nlet color = Color({});\r\nlet algorithm = Algorithm({});\r\n\r\nexport function Point(spec = {x: 0, y: 0}) {\r\n  let {x, y} = spec;\r\n\r\n  let getX = function() { return x; }\r\n  let getY = function() { return y; }\r\n\r\n  let render = function(context, fillStyle) {\r\n    context.fillStyle = fillStyle;\r\n    context.fillRect(x*context.canvas.width, y*context.canvas.height, 0.005*context.canvas.width, 0.005*context.canvas.width);\r\n  }\r\n\r\n  return Object.freeze({\r\n    getX,\r\n    getY,\r\n    render\r\n  });\r\n}\r\n\r\nexport function Points(spec = {points: []}) {\r\n  let {points} = spec;\r\n\r\n  let render = function(context, fillStyle) {\r\n    context.fillStyle = fillStyle;\r\n    points.forEach(function(p) {\r\n      p.render(context, fillStyle);\r\n    })\r\n  }\r\n\r\n  let renderTimeline = function(context, axis, fillStyle) {\r\n    context.fillStyle = fillStyle;\r\n    points.forEach(function(p, i) {\r\n      let dim = axis === 0? p.getX() : p.getY();\r\n      context.fillRect((i/30)*context.canvas.width, (1-dim)*context.canvas.height, context.canvas.width/30, 1);\r\n    })\r\n  }\r\n\r\n  return Object.freeze({\r\n    render,\r\n    renderTimeline\r\n  });\r\n}\r\n\r\nexport function Line(spec = {x1: 0, y1: 0, x2: 0, y2: 0}) {\r\n  let {x1, y1, x2, y2} = spec;\r\n\r\n  let render = function(context, strokeStyle) {\r\n    context.strokeStyle = strokeStyle\r\n    context.beginPath();\r\n    context.moveTo(x1*context.canvas.width, y1*context.canvas.height);\r\n    context.lineTo(x2*context.canvas.width, y2*context.canvas.height);\r\n    context.stroke();\r\n  }\r\n\r\n  return Object.freeze({\r\n    render\r\n  });\r\n}\r\n\r\nexport function Circle(spec = {x: 0, y: 0, r: 0}) {\r\n  let {x, y, r} = spec;\r\n\r\n  let getX = function() { return x; }\r\n  let getY = function() { return y; }\r\n  let getR = function() { return r; }\r\n\r\n  let render = function(context, strokeStyle, fillStyle) {\r\n    context.beginPath();\r\n    context.arc(x*context.canvas.width, y*context.canvas.height, r, 0, 2 * Math.PI);\r\n    if (fillStyle) {\r\n      context.fillStyle = fillStyle;\r\n      context.fill();\r\n    }\r\n    if (strokeStyle) {\r\n      context.strokeStyle = strokeStyle;\r\n      context.stroke();\r\n    }\r\n  }\r\n\r\n  return Object.freeze({\r\n    getX,\r\n    getY,\r\n    getR,\r\n    render\r\n  });\r\n}\r\n\r\nconst GT_BASE = [30, 15]\r\nconst GT_CONSIDER = [20, 20]\r\n\r\nexport function Rect(spec = {x: 0, y: 0, width: 0, height: 0}) {\r\n  let {x, y, width, height} = spec;\r\n\r\n  let getX = function() { return x; }\r\n  let getY = function() { return y; }\r\n  let getWidth = function() { return width; }\r\n  let getHeight = function() { return height; }\r\n\r\n  let clear = function(context, fillStyle) {\r\n    if (fillStyle) context.fillStyle = fillStyle;\r\n    else context.fillStyle = CLEAR_COLOR;\r\n    context.fillRect(0, 0, width, height);\r\n  }\r\n\r\n  let containsPoint = function(px, py) {\r\n    let w = width;\r\n    let h = height;\r\n\r\n    // At least one of the dimensions is negative\r\n    if ((w | h) < 0) { return false; }\r\n\r\n    // Note: if either dimension is zero, tests below must return false\r\n    if (px < x || py < y) { return false; }\r\n    w += x;\r\n    h += y;\r\n    // overflow || intersect\r\n    return ((w < x || w > px) && (h < y || h > py));\r\n  }\r\n\r\n  let tiles = function(tileSize = GT_BASE) {\r\n    let tiles = [];\r\n    let start = {x: x, y: y};\r\n    let shift = false;\r\n\r\n    while (start.y < y + height) {\r\n      let rectangle = {x: start.x, y: start.y, width: tileSize[0], height: tileSize[1]};\r\n      tiles.push(rectangle);\r\n\r\n      start.x = rectangle.x + rectangle.width;\r\n\r\n      if(start.x >= x + width) {\r\n        shift = !shift;\r\n        start.y += tileSize[1];\r\n        start.x = shift ? x - (tileSize[0] / 2) : 0;\r\n      }\r\n    }\r\n\r\n    return tiles;\r\n  }\r\n\r\n  let render = function(context, strokeStyle, fillStyle) {\r\n    if (strokeStyle) {\r\n      context.strokeStyle = strokeStyle;\r\n      context.strokeRect(x, y, width, height);\r\n    }\r\n    if (fillStyle) {\r\n      context.fillStyle = fillStyle;\r\n      context.fillRect(x, y, width, height);\r\n    }\r\n  }\r\n\r\n  return Object.freeze({\r\n    getX,\r\n    getY,\r\n    getWidth,\r\n    getHeight,\r\n    clear,\r\n    tiles,\r\n    containsPoint,\r\n    render\r\n  });\r\n}\r\n\r\nexport function Heatmap(spec = {tiles: []}) {\r\n  let {tiles} = spec;\r\n  let count = new Uint16Array(new ArrayBuffer(tiles.length*2));\r\n  let countClone = new Uint16Array(new ArrayBuffer(tiles.length*2));\r\n\r\n  let getCount = function(i) { return count[i]; }\r\n  let setCount = function(i, c) { count[i] = c; }\r\n  let getCountArr = function() { return count; }\r\n  let setCountArr = function(c) { count = c; }\r\n\r\n  let reset = function() {\r\n    count = new Uint16Array(new ArrayBuffer(tiles.length*2));\r\n    countClone = new Uint16Array(new ArrayBuffer(tiles.length*2));\r\n  }\r\n\r\n  let render = function(context) {\r\n    let count2 = count.buffer.byteLength !== 0? count : countClone;\r\n    let global_max = Math.max(...count2);\r\n\r\n    if (global_max !== 0) {\r\n      tiles.forEach(function(tile, i) {\r\n        if (count2[i]) {\r\n          let h = color.heat(algorithm.relative(0,count2[i],global_max));\r\n          tile.render(context, undefined, h);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (count.buffer.byteLength !== 0) {\r\n      countClone = count.slice(0);\r\n    };\r\n  }\r\n\r\n  return Object.freeze({\r\n    getCount,\r\n    setCount,\r\n    getCountArr,\r\n    setCountArr,\r\n    reset,\r\n    render\r\n  });\r\n}\r\n\r\n/* ANIMATION */\r\nexport function Ease(spec = {}) {\r\n  let linear = function(t,b,e,d) {\r\n    return (e-b)*t/d + b;\r\n  }\r\n\r\n  return Object.freeze({\r\n    linear\r\n  });\r\n}\r\n"],"sourceRoot":""}