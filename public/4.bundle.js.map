{"version":3,"sources":["webpack:///./app/js/algorithm.js","webpack:///./app/js/eye.js","webpack:///./app/js/storage.js","webpack:///./app/js/record/template.js","webpack:///./app/js/record/record.js","webpack:///./app/js/color.js","webpack:///./app/js/geo.js"],"names":["Algorithm","spec","Object","freeze","relative","a","x","b","limit","normalize","min","max","INIT_FIXATION_WINDOW","REPLAY_FPS","GazePoint","y","t","getX","getY","getTimestamp","Fixation","d","getDuration","getFixation","GazeWindow","points","detector","pointsX","map","p","DEVICE_WIDTH","pointsY","DEVICE_HEIGHT","Math","dispersion","reduce","length","toFixed","centroid","Storage","id","put","document","caches","open","then","cache","Response","get","async","callback","response","match","Request","json","value","undefined","clear","cacheName","delete","deleted","getKeys","keys","usage","navigator","storage","estimate","getRecordButton","data","console","log","recording","html","toggleRecord","Record","socket","dataPoints","fixationCount","fixationWindow","start","elapsed","DateTime","local","diff","toFormat","render","renderTmpl","template","getElementById","connect","context","offscreenCanvas","createElement","width","height","offscreenContext","getContext","worker","Worker","io","on","X","Y","gp","Timestamp","push","fixation","drawImage","canvas","pxls","getImageData","postMessage","timestamp","buffer","disconnect","RAW_DATA_COLOR","FIXATION_COLOR","SACCADE_COLOR","CLEAR_COLOR","DIFFERENT_COLORS","HEATMAP_COLORS","i","h","v","sqrt","hsl","hue","sat","val","round","Color","algorithm","heat","rel","window","screen","devicePixelRatio","color","Point","fillStyle","fillRect","Points","forEach","renderTimeline","axis","dim","Line","x1","y1","x2","y2","strokeStyle","beginPath","moveTo","lineTo","stroke","Circle","r","getR","arc","PI","fill","GT_BASE","Rect","getWidth","getHeight","tiles","tileSize","shift","rectangle","containsPoint","px","py","w","strokeRect","Heatmap","count","Uint16Array","ArrayBuffer","countClone","getCount","setCount","c","getCountArr","setCountArr","reset","count2","byteLength","global_max","tile","slice","Ease","linear","e"],"mappings":"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","file":"4.bundle.js","sourcesContent":["export function Algorithm(spec = {}) {\r\n  let relative = function(a, x, b) {\r\n    return (x - a) / (b - a);\r\n  }\r\n\r\n  let limit = function(a, x, b) {\r\n    if(x < a) return a;\r\n    if(x > b) return b;\r\n    return x;\r\n  }\r\n\r\n  let normalize = function(x, min, max) {\r\n    if (x < min) { x = min; }\r\n    if (x > max) { x = max; }\r\n    return (x - min) / (max - min);\r\n  }\r\n\r\n  return Object.freeze({\r\n    relative,\r\n    limit,\r\n    normalize\r\n  });\r\n}\r\n","import {DEVICE_WIDTH, DEVICE_HEIGHT} from './geo.js';\r\n\r\nexport const DISPERSION_THRESHOLD = 50; // pixels\r\nexport const DURATION_THRESHOLD = 150; // ms\r\nexport const INIT_FIXATION_WINDOW = 10; // ~0.15 * 70Hz\r\n\r\nexport const REPLAY_FPS = 5;\r\n\r\nexport function GazePoint(spec = {x: 0, y: 0, t: 0}) {\r\n  let {x,y,t} = spec\r\n\r\n  let getX = function() { return x; }\r\n  let getY = function() { return y; }\r\n  let getTimestamp = function() { return t; }\r\n\r\n  return Object.freeze({\r\n    getX,\r\n    getY,\r\n    getTimestamp\r\n  })\r\n}\r\n\r\nexport function Fixation(spec = {x: 0, y: 0, t: 0, d: 0}) {\r\n  let {x,y,t,d} = spec;\r\n\r\n  let getX = function() { return x; }\r\n  let getY = function() { return y; }\r\n  let getTimestamp = function() { return t; }\r\n  let getDuration = function() { return d; }\r\n\r\n  let getFixation = function() {\r\n    return {x: x, y: y};\r\n  }\r\n\r\n  return Object.freeze({\r\n    getX,\r\n    getY,\r\n    getTimestamp,\r\n    getDuration,\r\n    getFixation\r\n  })\r\n}\r\n\r\nexport function GazeWindow(spec = {points: []}) {\r\n  let {points} = spec;\r\n\r\n  let dispersion = function() {\r\n    let pointsX = points.map(p => p.getX() * DEVICE_WIDTH);\r\n    let pointsY = points.map(p => p.getY() * DEVICE_HEIGHT);\r\n\r\n    return (Math.max(...pointsX) - Math.min(...pointsX)) + (Math.max(...pointsY) - Math.min(...pointsY));\r\n  }\r\n\r\n  let centroid = function() {\r\n    let pointsX = points.map(p => p.getX());\r\n    let pointsY = points.map(p => p.getY());\r\n\r\n    return Fixation({\r\n      x: +(pointsX.reduce((a,b) => a+b) / pointsX.length).toFixed(6),\r\n      y: +(pointsY.reduce((a,b) => a+b) / pointsY.length).toFixed(6),\r\n      t: +(points[0].getTimestamp()).toFixed(6),\r\n      d: +(points[points.length-1].getTimestamp() - points[0].getTimestamp()).toFixed(6)\r\n    })\r\n  }\r\n\r\n  let detector = function() {\r\n    if (dispersion() > DISPERSION_THRESHOLD) {\r\n      return centroid();\r\n    }\r\n    return false;\r\n  }\r\n\r\n  return Object.freeze({\r\n    detector\r\n  })\r\n}\r\n","export function Storage(spec = {}) {\r\n  let id = 0;\r\n\r\n  let put = function(document) {\r\n    caches.open('gaze').then((cache) => {\r\n      const options = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n      cache.put('/gaze/' + id, new Response(document));\r\n      id = id + 1;\r\n    })\r\n  }\r\n\r\n  let get = async function(id, callback) {\r\n    const cache = await caches.open('gaze');\r\n    const response = await cache.match(new Request('/gaze/' + id));\r\n\r\n    if (response) {\r\n      response.json().then((value) => callback(value));\r\n    } else {\r\n      callback(undefined);\r\n    }\r\n  }\r\n\r\n  let clear = async function(cacheName, callback) {\r\n    caches.delete(cacheName).then((deleted) => callback(deleted));\r\n  }\r\n\r\n  let getKeys = async function(cacheName, callback) {\r\n    const cache = await caches.open(cacheName);\r\n    cache.keys().then((keys) => callback(keys));\r\n  }\r\n\r\n  let usage = function(callback) {\r\n    return navigator.storage.estimate();\r\n  }\r\n\r\n  return Object.freeze({\r\n    put,\r\n    get,\r\n    clear,\r\n    getKeys,\r\n    usage\r\n  })\r\n}\r\n","import {html} from 'lit-html';\r\n\r\nexport const template = (data) => html`\r\n  <div class=\"mdc-layout-grid\">\r\n    <div class=\"mdc-layout-grid__inner\">\r\n      <div class=\"mdc-layout-grid__cell--span-4\"></div>\r\n      <div class=\"mdc-layout-grid__cell--span-4\">\r\n        <video id=\"player\" playsinline autoplay loop muted></video>\r\n        ${getRecordButton(data)}\r\n        ${data.elapsed}\r\n      </div>\r\n      <div class=\"mdc-layout-grid__cell--span-4\"></div>\r\n    </div>\r\n  </div>\r\n`;\r\n\r\nlet getRecordButton = function(data) {\r\n  console.log(\"inspect\", data.recording)\r\n  if (!data.recording) {\r\n    return html`\r\n      <button @click=\"${data.toggleRecord}\" class=\"mdc-button mdc-button--unelevated record-button\">\r\n        <i class=\"material-icons mdc-button__icon\" aria-hidden=\"true\">fiber_manual_record</i>\r\n        <span class=\"mdc-button__label\">Record</span>\r\n      </button>`\r\n  } else {\r\n    return html`\r\n      <button @click=\"${data.toggleRecord}\" class=\"mdc-button mdc-button--unelevated\">\r\n        <i class=\"material-icons mdc-button__icon\" aria-hidden=\"true\">stop</i>\r\n        <span class=\"mdc-button__label\">Stop</span>\r\n      </button>\r\n    `\r\n  }\r\n}\r\n\r\nlet fullscreen = function() {\r\n  const context = document.getElementById('a').getContext('2d');\r\n  context.canvas.webkitRequestFullScreen()\r\n}\r\n","import {Storage} from '../storage.js'\r\nimport {DEVICE_WIDTH, DEVICE_HEIGHT} from '../geo.js';\r\nimport {INIT_FIXATION_WINDOW} from '../eye.js';\r\nimport {Fixation, GazePoint, GazeWindow} from '../eye.js'\r\n\r\nimport io from 'socket.io-client';\r\nimport {render as renderTmpl} from 'lit-html';\r\nimport {DateTime, Duration} from 'luxon';\r\n\r\nimport {template} from './template.js'\r\n\r\nexport function Record(spec) {\r\n  let socket = undefined;\r\n\r\n  let lastFixatedEl = undefined;\r\n  let dataPoints = [];\r\n  let fixationCount = 0;\r\n  let prevFixation = undefined;\r\n  let fixationWindow = INIT_FIXATION_WINDOW;\r\n  let storage = Storage({});\r\n\r\n  let start = undefined;\r\n\r\n  let toggleRecord = function() {\r\n    if (!spec.recording) {\r\n      start = DateTime.local();\r\n    } else {\r\n      spec.elapsed = DateTime.local().diff(start).toFormat(\"hh:mm:ss\");\r\n    }\r\n    spec.recording = !spec.recording;\r\n    render(spec);\r\n  }\r\n\r\n  let render = data => {\r\n    renderTmpl(template(data), document.getElementById('view'));\r\n  }\r\n\r\n  let init = () => {\r\n    Object.assign(spec, {\r\n      toggleRecord,\r\n      recording: false,\r\n    });\r\n    render(spec);\r\n  }\r\n\r\n  init();\r\n\r\n  let connect = function(context) {\r\n    let offscreenCanvas = document.createElement('canvas');\r\n    offscreenCanvas.width = 1280;\r\n    offscreenCanvas.height = 720;\r\n    let offscreenContext = offscreenCanvas.getContext('2d');\r\n\r\n    let worker = new Worker(\"/storage.js\");\r\n\r\n    socket = io.connect('http://localhost');\r\n    socket.on('news', function (data) {\r\n      data.X = data.X / DEVICE_WIDTH;\r\n      data.Y = data.Y / DEVICE_HEIGHT;\r\n      if (spec.recording) {\r\n        let gp = GazePoint({x: data.X, y: data.Y, t: data.Timestamp});\r\n        dataPoints.push(gp);\r\n        if (dataPoints.length === fixationWindow) {\r\n          let fixation = GazeWindow({points: dataPoints}).detector();\r\n          if (fixation) {\r\n            fixationCount += 1;\r\n\r\n            offscreenContext.drawImage(document.getElementById('player'),0,0,offscreenContext.canvas.width,offscreenContext.canvas.height);\r\n            let pxls = offscreenContext.getImageData(0,0,offscreenContext.canvas.width,offscreenContext.canvas.height);\r\n            //console.log(pxls);\r\n            //console.log(JSON.stringify({x: fixation.getX(), y: fixation.getY(), img: offscreenContext.canvas.toDataURL('image/webp', 0.5).length  }));\r\n            //console.log(\"timestamp\", fixation.getTimestamp());\r\n            worker.postMessage({x: fixation.getX(), y: fixation.getY(), timestamp: fixation.getTimestamp(), pxls: pxls.data.buffer}, [pxls.data.buffer]);\r\n            //storage.put(JSON.stringify({x: fixation.getX(), y: fixation.getY(), img: context.canvas.toDataURL('image/webp', 0.5)}));\r\n            if (fixationCount === 20) {\r\n              fixationCount = 0;\r\n            }\r\n\r\n            /*let element = document.elementFromPoint(fixation.getX(), fixation.getY());\r\n            if (element) {\r\n              if (lastFixatedEl) {\r\n                lastFixatedEl.classList.remove(\"fixated\");\r\n              }\r\n              lastFixatedEl = element;\r\n              lastFixatedEl.classList.add(\"fixated\");\r\n            }*/\r\n            dataPoints = [];\r\n            fixationWindow = INIT_FIXATION_WINDOW;\r\n          } else {\r\n            fixationWindow++;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  let disconnect = function() {\r\n    socket.disconnect();\r\n    console.log(\"disconnect from record\");\r\n  }\r\n\r\n  return Object.freeze({\r\n    connect,\r\n    disconnect\r\n  });\r\n}\r\n","import {Algorithm} from './algorithm.js'\r\n\r\nexport const RAW_DATA_COLOR = 'rgba(200,0,0,0.85)';\r\nexport const FIXATION_COLOR = 'rgba(255,255,255,0.85)';\r\nexport const SACCADE_COLOR = 'rgba(255,255,255,0.85)';\r\nexport const CLEAR_COLOR = 'rgb(0,0,0)';\r\n\r\nexport const DIFFERENT_COLORS = [];\r\nexport const HEATMAP_COLORS = [];\r\n\r\nfunction hsv2hsl(hue,sat,val) {\r\n  return [\r\n    hue,\r\n    sat*val/((hue=(2-sat)*val)<1?hue:2-hue),\r\n    hue/2\r\n  ]\r\n}\r\n\r\nfor (var i = 0; i < 10; i++) {\r\n  var h = (i * 0.618033988749895) % 1.0;\r\n  var s = 0.5;\r\n  var v = Math.sqrt(1.0 - ((i * 0.618033988749895) % 0.5));\r\n  var a = 0.5;\r\n\r\n  var hsl = hsv2hsl(h,s,v);\r\n\r\n  DIFFERENT_COLORS.push('hsla(' + Math.round(hsl[0]*255) + ',' + Math.round(hsl[1]*100) + '%,' + Math.round(hsl[2]*100) + '%,' + a + ')');\r\n}\r\n\r\nfor (let h = 0; h < 210; h++) {\r\n  HEATMAP_COLORS.push('hsla(' + (209 - h) + ', 50%, 50%,'+ 0.5 +')');\r\n}\r\n\r\nexport function Color(spec = {}) {\r\n  let algorithm = Algorithm({});\r\n\r\n  let heat = function(rel) {\r\n    let d = algorithm.limit(0, rel, 1)\r\n    if (rel === 0) return 'rgba(0,0,0,0)';\r\n    return HEATMAP_COLORS[Math.round((d * (HEATMAP_COLORS.length - 1)))];\r\n  }\r\n\r\n  return Object.freeze({\r\n    heat\r\n  });\r\n}\r\n","import {CLEAR_COLOR} from './color.js';\r\nimport {Color} from './color.js';\r\nimport {Algorithm} from './algorithm.js';\r\n\r\nexport const DEVICE_WIDTH = window.screen.width * window.devicePixelRatio;\r\nexport const DEVICE_HEIGHT = window.screen.height * window.devicePixelRatio;\r\n\r\nlet color = Color({});\r\nlet algorithm = Algorithm({});\r\n\r\nexport function Point(spec = {x: 0, y: 0}) {\r\n  let {x, y} = spec;\r\n\r\n  let getX = function() { return x; }\r\n  let getY = function() { return y; }\r\n\r\n  let render = function(context, fillStyle) {\r\n    context.fillStyle = fillStyle;\r\n    context.fillRect(x*context.canvas.width, y*context.canvas.height, 0.005*context.canvas.width, 0.005*context.canvas.width);\r\n  }\r\n\r\n  return Object.freeze({\r\n    getX,\r\n    getY,\r\n    render\r\n  });\r\n}\r\n\r\nexport function Points(spec = {points: []}) {\r\n  let {points} = spec;\r\n\r\n  let render = function(context, fillStyle) {\r\n    context.fillStyle = fillStyle;\r\n    points.forEach(function(p) {\r\n      p.render(context, fillStyle);\r\n    })\r\n  }\r\n\r\n  let renderTimeline = function(context, axis, fillStyle) {\r\n    context.fillStyle = fillStyle;\r\n    points.forEach(function(p, i) {\r\n      let dim = axis === 0? p.getX() : p.getY();\r\n      context.fillRect((i/30)*context.canvas.width, (1-dim)*context.canvas.height, context.canvas.width/30, 1);\r\n    })\r\n  }\r\n\r\n  return Object.freeze({\r\n    render,\r\n    renderTimeline\r\n  });\r\n}\r\n\r\nexport function Line(spec = {x1: 0, y1: 0, x2: 0, y2: 0}) {\r\n  let {x1, y1, x2, y2} = spec;\r\n\r\n  let render = function(context, strokeStyle) {\r\n    context.strokeStyle = strokeStyle\r\n    context.beginPath();\r\n    context.moveTo(x1*context.canvas.width, y1*context.canvas.height);\r\n    context.lineTo(x2*context.canvas.width, y2*context.canvas.height);\r\n    context.stroke();\r\n  }\r\n\r\n  return Object.freeze({\r\n    render\r\n  });\r\n}\r\n\r\nexport function Circle(spec = {x: 0, y: 0, r: 0}) {\r\n  let {x, y, r} = spec;\r\n\r\n  let getX = function() { return x; }\r\n  let getY = function() { return y; }\r\n  let getR = function() { return r; }\r\n\r\n  let render = function(context, strokeStyle, fillStyle) {\r\n    context.beginPath();\r\n    context.arc(x*context.canvas.width, y*context.canvas.height, r, 0, 2 * Math.PI);\r\n    if (fillStyle) {\r\n      context.fillStyle = fillStyle;\r\n      context.fill();\r\n    }\r\n    if (strokeStyle) {\r\n      context.strokeStyle = strokeStyle;\r\n      context.stroke();\r\n    }\r\n  }\r\n\r\n  return Object.freeze({\r\n    getX,\r\n    getY,\r\n    getR,\r\n    render\r\n  });\r\n}\r\n\r\nconst GT_BASE = [30, 15]\r\nconst GT_CONSIDER = [20, 20]\r\n\r\nexport function Rect(spec = {x: 0, y: 0, width: 0, height: 0}) {\r\n  let {x, y, width, height} = spec;\r\n\r\n  let getX = function() { return x; }\r\n  let getY = function() { return y; }\r\n  let getWidth = function() { return width; }\r\n  let getHeight = function() { return height; }\r\n\r\n  let clear = function(context, fillStyle) {\r\n    if (fillStyle) context.fillStyle = fillStyle;\r\n    else context.fillStyle = CLEAR_COLOR;\r\n    context.fillRect(0, 0, width, height);\r\n  }\r\n\r\n  let containsPoint = function(px, py) {\r\n    let w = width;\r\n    let h = height;\r\n\r\n    // At least one of the dimensions is negative\r\n    if ((w | h) < 0) { return false; }\r\n\r\n    // Note: if either dimension is zero, tests below must return false\r\n    if (px < x || py < y) { return false; }\r\n    w += x;\r\n    h += y;\r\n    // overflow || intersect\r\n    return ((w < x || w > px) && (h < y || h > py));\r\n  }\r\n\r\n  let tiles = function(tileSize = GT_BASE) {\r\n    let tiles = [];\r\n    let start = {x: x, y: y};\r\n    let shift = false;\r\n\r\n    while (start.y < y + height) {\r\n      let rectangle = {x: start.x, y: start.y, width: tileSize[0], height: tileSize[1]};\r\n      tiles.push(rectangle);\r\n\r\n      start.x = rectangle.x + rectangle.width;\r\n\r\n      if(start.x >= x + width) {\r\n        shift = !shift;\r\n        start.y += tileSize[1];\r\n        start.x = shift ? x - (tileSize[0] / 2) : 0;\r\n      }\r\n    }\r\n\r\n    return tiles;\r\n  }\r\n\r\n  let render = function(context, strokeStyle, fillStyle) {\r\n    if (strokeStyle) {\r\n      context.strokeStyle = strokeStyle;\r\n      context.strokeRect(x, y, width, height);\r\n    }\r\n    if (fillStyle) {\r\n      context.fillStyle = fillStyle;\r\n      context.fillRect(x, y, width, height);\r\n    }\r\n  }\r\n\r\n  return Object.freeze({\r\n    getX,\r\n    getY,\r\n    getWidth,\r\n    getHeight,\r\n    clear,\r\n    tiles,\r\n    containsPoint,\r\n    render\r\n  });\r\n}\r\n\r\nexport function Heatmap(spec = {tiles: []}) {\r\n  let {tiles} = spec;\r\n  let count = new Uint16Array(new ArrayBuffer(tiles.length*2));\r\n  let countClone = new Uint16Array(new ArrayBuffer(tiles.length*2));\r\n\r\n  let getCount = function(i) { return count[i]; }\r\n  let setCount = function(i, c) { count[i] = c; }\r\n  let getCountArr = function() { return count; }\r\n  let setCountArr = function(c) { count = c; }\r\n\r\n  let reset = function() {\r\n    count = new Uint16Array(new ArrayBuffer(tiles.length*2));\r\n    countClone = new Uint16Array(new ArrayBuffer(tiles.length*2));\r\n  }\r\n\r\n  let render = function(context) {\r\n    let count2 = count.buffer.byteLength !== 0? count : countClone;\r\n    let global_max = Math.max(...count2);\r\n\r\n    if (global_max !== 0) {\r\n      tiles.forEach(function(tile, i) {\r\n        if (count2[i]) {\r\n          let h = color.heat(algorithm.relative(0,count2[i],global_max));\r\n          tile.render(context, undefined, h);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (count.buffer.byteLength !== 0) {\r\n      countClone = count.slice(0);\r\n    };\r\n  }\r\n\r\n  return Object.freeze({\r\n    getCount,\r\n    setCount,\r\n    getCountArr,\r\n    setCountArr,\r\n    reset,\r\n    render\r\n  });\r\n}\r\n\r\n/* ANIMATION */\r\nexport function Ease(spec = {}) {\r\n  let linear = function(t,b,e,d) {\r\n    return (e-b)*t/d + b;\r\n  }\r\n\r\n  return Object.freeze({\r\n    linear\r\n  });\r\n}\r\n"],"sourceRoot":""}